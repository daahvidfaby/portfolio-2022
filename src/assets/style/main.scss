@use "sass:math";
@use "sass:string";

/****
    FONTS
***/

@font-face {
    font-family: 'Playfair Display';
    src: url('../fonts/playfairdisplay-black-webfont.woff2') format('woff2'),
         url('../fonts/playfairdisplay-black-webfont.woff') format('woff');
    font-weight: 900;
    font-style: normal;
}

@font-face {
    font-family: 'Playfair Display';
    src: url('../fonts/playfairdisplay-bold-webfont.woff2') format('woff2'),
         url('../fonts/playfairdisplay-bold-webfont.woff') format('woff');
    font-weight: 700;
    font-style: normal;
}

@font-face {
    font-family: 'Playfair Display';
    src: url('../fonts/playfairdisplay-regular-webfont.woff2') format('woff2'),
         url('../fonts/playfairdisplay-regular-webfont.woff') format('woff');
    font-weight: 400;
    font-style: normal;
}


@font-face {
    font-family: 'Metropolis';
    src: url('../fonts/metropolis-regular-webfont.woff2') format('woff2'),
         url('../fonts/metropolis-regular-webfont.woff') format('woff');
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: 'Metropolis';
    src: url('../fonts/metropolis-semibold-webfont.woff2') format('woff2'),
         url('../fonts/metropolis-semibold-webfont.woff') format('woff');
    font-weight: 700;
    font-style: normal;
}


$font-01 : 'Playfair Display';
$font-02 : 'Metropolis';

/****
    VARIABLES
***/

$color-01 : #F0EEE5;
$color-02 : #304E37;
$color-03 : #687C6F;
$color-04 : #C8774A;


$breakpoints: (
    sm: 576px,
    md: 992px,
    lg: 1330px,
  );


/****
    MIXINS
***/

@mixin breakpoint($breakpoint) {

    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media (min-width: map-get($breakpoints, $breakpoint)) {
        @content;
        }
    }

    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
            + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}



/****
    FUNCTIONS
***/

$html-font-size: 16px;
@function stripUnit($value) {
    @return math.div($value, $value * 0 + 1);
}
@function rem($pxValue) {
    @return #{math.div(stripUnit($pxValue), stripUnit($html-font-size))}rem;
}



/****
    BASIC STYLING
***/

@import './basic/reset.scss';
@import './basic/titles.scss';
@import './basic/texts.scss';


html {
    font-family: $font-02;
    font-size: rem(16);
    line-height: 1.45;
}

.page-container {
    background-color: $color-01;
    color: $color-02;

    transition: all 0.2s;

    &.dark-mode {
        background-color: $color-02;
        color: $color-01;
    }
}

.container {
    padding-left: rem(20);
    padding-right: rem(20);
    max-width: 75em;
    margin: 0 auto;

    @include breakpoint(sm) {
        padding-left: 4em;
        padding-right: 4em;
    }

    @include breakpoint(md) {
        padding-left: 0;
        padding-right: 0;
    }
}

/****
    COMPONENTS
***/

@import './components/button.scss';
@import './components/accordion.scss';



/****
    SECTIONS
***/

@import './sections/header.scss';
@import './sections/hero.scss';
@import './sections/introduction.scss';
@import './sections/consulting.scss';
@import './sections/typology.scss';
@import './sections/contact.scss';
@import './sections/footer.scss';